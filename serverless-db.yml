#
# Separate stack for the DynamoDB table, to allow separate deployment.
#
# The table doesn't need to be deployed nearly as often as the lambdas, which was
# a problem when they were the same serverless.yml (and hence CloudFormation stack).
#
service: hills-api-db

provider:
  name: aws
  region: ${opt:region, '${file(./serverless-shared.yml):constants.defaultRegion}'}
  stage: ${opt:stage, 'dev'}

plugins:
  - serverless-plugin-scripts

resources:
  # Cross-stack reference - https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
  Outputs:
    HillsTableArn:
      Export:
        Name: ${self:provider.stage}-HillsTableArn
      Value:
        Fn::GetAtt: [HillsTable, Arn]
  Resources:
    HillsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.hillsTableName}
        AttributeDefinitions:
          - AttributeName: number
            AttributeType: N
        KeySchema:
          - AttributeName: number
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

custom:
  hillsTableName: ${self:provider.stage}_HILLS
  scripts:
    commands:
      deploy-data: node ./scripts/hillsDB/populateDynamoDB.js ${self:provider.region} ${self:provider.stage}
