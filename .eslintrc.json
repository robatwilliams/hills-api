{
  "env": {
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "extends": "eslint:recommended",
  "plugins": ["import"],
  "parserOptions": {
    "ecmaVersion": 2018
  },
  "reportUnusedDisableDirectives": true,
  "rules": {
    // Only ones that won't conflict with Prettier _in_practice_ : https://github.com/prettier/eslint-config-prettier#cli-helper-tool

    "import/group-exports": "error",
    "import/no-extraneous-dependencies": "error",
    "import/no-unresolved": ["error", { "commonjs": true }],
    "import/order": ["error", { "newlines-between": "always" }],

    // https://eslint.org/docs/rules/#possible-errors - nothing; almost all are enabled by eslint:recommended

    // https://eslint.org/docs/rules/#best-practices - selection
    "consistent-return": "error",
    "default-case": "error",
    "eqeqeq": ["error", "always", { "null": "never" }],
    "no-empty-function": "error",
    "no-return-await": "error",
    "radix": "error",
    "require-await": "error",

    // https://eslint.org/docs/rules/#variables - selection
    "no-shadow": "error",
    "no-use-before-define": ["error", "nofunc"],

    // https://eslint.org/docs/rules/#nodejs-and-commonjs - selection
    "no-process-exit": "error",

    // https://eslint.org/docs/rules/#stylistic-issues - selection; most things covered by Prettier
    "camelcase": "error",
    "func-names": ["error", "as-needed"],
    "func-style": ["error", "declaration"],
    "lines-between-class-members": "error",
    "no-bitwise": "error",
    "no-lonely-if": "error",
    // "no-mixed-operators": "error", // Prettier conflict
    "no-negated-condition": "error",
    "quotes": [
      // Prettier-compatible options
      "error",
      "single",
      { "avoidEscape": true, "allowTemplateLiterals": false }
    ],
    "spaced-comment": ["error", "always", { "block": { "balanced": true } }]
  },
  "overrides": [
    {
      "files": ["./src/**/*"],
      "rules": {
        // Matters because serverless packaging does excludeDevDependencies
        "import/no-extraneous-dependencies": ["error", { "devDependencies": false }]
      }
    }
  ]
}
